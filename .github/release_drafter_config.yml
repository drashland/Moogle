name-template: 'v$RESOLVED_VERSION'
tag-template: 'v$RESOLVED_VERSION'

change-template: '- $TITLE (#$NUMBER)'

# Only add to the draft release when a PR has one of these labels
include-labels:
  - 'Type: Major'
  - 'Type: Minor'
  - 'Type: Patch'
  - 'Type: Chore'

# Here is how we determine what version the release would be, by using labels. Eg when "minor" is used, the drafter knows to bump up to a new minor version
version-resolver:
  major:
    labels:
      - 'Type: Major'
  minor:
    labels:
      - 'Type: Minor'
  patch:
    labels:
      - 'Type: Patch'
      - 'Type: Chore' # allow our chore PR's to just be patches too
  default: patch

# What our release will look like. If no draft has been created, then this will be used, otherwise $CHANGES just gets addedd
template: |
  __Importing__

  In the browser:

  ```html
  <script type="module" src="myScript.js"></script>
  ```

  ```javascript
  // myScript.js
  import { Moogle } from "https://unpkg.com/@drashland/moogle@$RESOLVED_VERSION/lib/esm/Moogle.js";
  const service = new Moogle();
  ```

  In Node:

  ```
  # Using npm
  $ npm install @drashland/moogle

  # Using yarn
  $ yarn add @drashland/moogle
  ```

  ```javascript
  // JavaScript
  const { Moogle } = require("@drashland/moogle");
  const service = new Moogle();
  ```

  ```typescript
  // TypeScript
  import { Moogle } from "@drashland/moogle";
  const serviceWithTypes = new Moogle<MyType>();
  const serviceWithoutTypes = new Moogle();
  ```

  In Deno:

  ```javascript
  // JavaScript
  import { Moogle } from "https://unpkg.com/@drashland/moogle@$RESOLVED_VERSION/lib/esm/Moogle.js";
  const service = new Moogle();
  ```

  ```typescript
  // TypeScript
  import { Moogle } from "https://deno.land/x/moogle@v0.0.7/mod.ts";
  const serviceWithTypes = new Moogle<MyType>();
  const serviceWithoutTypes = new Moogle();

  __Updates__

  $CHANGES
